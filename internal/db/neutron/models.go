// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package neutron

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type HaRouterAgentPortBindingsState string

const (
	HaRouterAgentPortBindingsStateActive  HaRouterAgentPortBindingsState = "active"
	HaRouterAgentPortBindingsStateStandby HaRouterAgentPortBindingsState = "standby"
	HaRouterAgentPortBindingsStateUnknown HaRouterAgentPortBindingsState = "unknown"
)

func (e *HaRouterAgentPortBindingsState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = HaRouterAgentPortBindingsState(s)
	case string:
		*e = HaRouterAgentPortBindingsState(s)
	default:
		return fmt.Errorf("unsupported scan type for HaRouterAgentPortBindingsState: %T", src)
	}
	return nil
}

type NullHaRouterAgentPortBindingsState struct {
	HaRouterAgentPortBindingsState HaRouterAgentPortBindingsState
	Valid                          bool // Valid is true if HaRouterAgentPortBindingsState is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullHaRouterAgentPortBindingsState) Scan(value interface{}) error {
	if value == nil {
		ns.HaRouterAgentPortBindingsState, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.HaRouterAgentPortBindingsState.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullHaRouterAgentPortBindingsState) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.HaRouterAgentPortBindingsState), nil
}

type Agent struct {
	ID                 string
	Host               string
	AdminStateUp       bool
	HeartbeatTimestamp time.Time
}

type HaRouterAgentPortBinding struct {
	PortID    string
	RouterID  string
	L3AgentID sql.NullString
	State     NullHaRouterAgentPortBindingsState
}
